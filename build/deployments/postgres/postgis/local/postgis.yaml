apiVersion: v1
kind: ConfigMap
metadata:
  name: postgis-config
  namespace: postgres
  labels:
    app: postgis
data:
  POSTGRES_DB: PlanetoidGen.Database
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: psqladmin
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: postgis-local-storage
  namespace: postgres
  labels:
    app: postgis
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgis-pv
  namespace: postgres
  labels:
    type: local
    app: postgis
spec:
  storageClassName: postgis-local-storage
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  local:
    path: /run/desktop/mnt/host/c/k8s/postgis
  volumeMode: Filesystem
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - docker-desktop
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: postgis
  name: postgis-pvc
  namespace: postgres
spec:
  storageClassName: postgis-local-storage
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgis
  namespace: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgis
  template:
    metadata:
      labels:
        app: postgis
    spec:
      containers:
        - name: postgis
          image: postgis:14-3.3.2
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
              name: postgis-client
          envFrom:
            - configMapRef:
                name: postgis-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgis
  namespace: postgres
spec:
  selector:
    app: postgis
  ports:
  - port: 5432
    targetPort: 5432
    nodePort: 30037
  type: NodePort
